"""empty message

Revision ID: 74433eb9c7cf
Revises: 
Create Date: 2025-01-27 14:15:53.340763

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '74433eb9c7cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ticker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('exchange', sa.String(length=10), nullable=False),
    sa.Column('instrument_token', sa.Integer(), nullable=False),
    sa.Column('trading_symbol', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_price', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_token')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_phone_number'), ['phone_number'], unique=True)

    op.create_table('alert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['ticker.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alert_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_ticker_id'), ['ticker_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_alert_user_id'), ['user_id'], unique=False)

    op.create_table('user_tickers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticker_id'], ['ticker.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'ticker_id')
    )
    op.create_table('zone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('entry', sa.Float(), nullable=False),
    sa.Column('stoploss', sa.Float(), nullable=False),
    sa.Column('target', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('entry_at', sa.DateTime(), nullable=True),
    sa.Column('stoploss_at', sa.DateTime(), nullable=True),
    sa.Column('target_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticker_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticker_id'], ['ticker.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('zone', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_zone_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_zone_ticker_id'), ['ticker_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_zone_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('zone', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_zone_user_id'))
        batch_op.drop_index(batch_op.f('ix_zone_ticker_id'))
        batch_op.drop_index(batch_op.f('ix_zone_created_at'))

    op.drop_table('zone')
    op.drop_table('user_tickers')
    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alert_user_id'))
        batch_op.drop_index(batch_op.f('ix_alert_ticker_id'))
        batch_op.drop_index(batch_op.f('ix_alert_created_at'))

    op.drop_table('alert')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_phone_number'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.drop_index(batch_op.f('ix_user_created_at'))

    op.drop_table('user')
    op.drop_table('ticker')
    # ### end Alembic commands ###
